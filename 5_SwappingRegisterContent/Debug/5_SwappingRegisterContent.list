
5_SwappingRegisterContent.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000094  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800022c  08000234  00001234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800022c  0800022c  00001234  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800022c  0800022c  00001234  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800022c  08000234  00001234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800022c  0800022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000230  08000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000234  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000234  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001234  2**0
                  CONTENTS, READONLY
 12 .debug_line   000000d8  00000000  00000000  00001264  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line_str 0000009b  00000000  00000000  0000133c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_info   00000054  00000000  00000000  000013d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000038  00000000  00000000  0000142b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000048  00000000  00000000  00001468  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    000000b7  00000000  00000000  000014b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 00000019  00000000  00000000  00001567  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000214 	.word	0x08000214

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000214 	.word	0x08000214

080001d8 <Reset_Handler>:
.section .text
.global __main
.global Reset_Handler

Reset_Handler:
    ldr r0, =0x20000000           @ Start of RAM
 80001d8:	f04f 5000 	mov.w	r0, #536870912	@ 0x20000000
    ldr r1, =0x20020000           @ End of RAM (adjust as needed)
 80001dc:	4908      	ldr	r1, [pc, #32]	@ (8000200 <stop+0x6>)
    ldr r2, =0xDEADBEEF           @ Fill pattern
 80001de:	4a09      	ldr	r2, [pc, #36]	@ (8000204 <stop+0xa>)

080001e0 <fill_ram>:

fill_ram:
    cmp r0, r1
 80001e0:	4288      	cmp	r0, r1
    bcs fill_done
 80001e2:	d202      	bcs.n	80001ea <__main>
    str r2, [r0], #4
 80001e4:	f840 2b04 	str.w	r2, [r0], #4
    b fill_ram
 80001e8:	e7fa      	b.n	80001e0 <fill_ram>

080001ea <__main>:

fill_done:
    @ Ram initialization complete

__main:
    ldr r0, =0xBABEFACE
 80001ea:	4807      	ldr	r0, [pc, #28]	@ (8000208 <stop+0xe>)
    ldr r1, =0xDEADBEAF
 80001ec:	4907      	ldr	r1, [pc, #28]	@ (800020c <stop+0x12>)

    eor	r0,r0,r1
 80001ee:	ea80 0001 	eor.w	r0, r0, r1
    eor r1,r0,r1
 80001f2:	ea80 0101 	eor.w	r1, r0, r1
    eor	r0,r0,r1
 80001f6:	ea80 0001 	eor.w	r0, r0, r1

080001fa <stop>:


stop:
    b __main
 80001fa:	f7ff bff6 	b.w	80001ea <__main>
 80001fe:	bf00      	nop
    ldr r1, =0x20020000           @ End of RAM (adjust as needed)
 8000200:	20020000 	.word	0x20020000
    ldr r2, =0xDEADBEEF           @ Fill pattern
 8000204:	deadbeef 	.word	0xdeadbeef
    ldr r0, =0xBABEFACE
 8000208:	babeface 	.word	0xbabeface
    ldr r1, =0xDEADBEAF
 800020c:	deadbeaf 	.word	0xdeadbeaf

08000210 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000210:	e7fe      	b.n	8000210 <ADC_IRQHandler>
	...

08000214 <_init>:
 8000214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000216:	bf00      	nop
 8000218:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800021a:	bc08      	pop	{r3}
 800021c:	469e      	mov	lr, r3
 800021e:	4770      	bx	lr

08000220 <_fini>:
 8000220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000222:	bf00      	nop
 8000224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000226:	bc08      	pop	{r3}
 8000228:	469e      	mov	lr, r3
 800022a:	4770      	bx	lr
